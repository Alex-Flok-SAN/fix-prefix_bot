#!/usr/bin/env python3
"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è FIX –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
"""

import tkinter as tk

class TestApp:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Test FIX Persistence")
        self.root.geometry("800x600")
        
        # Canvas
        self.canvas = tk.Canvas(self.root, bg="black")
        self.canvas.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        self._stored_fix_rect = None
        self._fix_items = []
        
        # –ö–Ω–æ–ø–∫–∏
        btn_frame = tk.Frame(self.root)
        btn_frame.pack(side=tk.BOTTOM, fill=tk.X, padx=10, pady=5)
        
        tk.Button(btn_frame, text="Draw FIX", command=self.draw_fix).pack(side=tk.LEFT, padx=5)
        tk.Button(btn_frame, text="Clear", command=self.clear_canvas).pack(side=tk.LEFT, padx=5)
        tk.Button(btn_frame, text="Redraw Chart", command=self.redraw_chart).pack(side=tk.LEFT, padx=5)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.canvas.bind('<Configure>', self.on_canvas_configure)
        self.root.bind('<Configure>', self.on_window_resize)
        
        self.draw_basic_chart()
        
    def draw_basic_chart(self):
        """–†–∏—Å—É–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –≥—Ä–∞—Ñ–∏–∫"""
        self.canvas.delete("chart")
        
        # –ü—Ä–æ—Å—Ç—ã–µ —Å–≤–µ—á–∏
        for i in range(10):
            x = 50 + i * 70
            y1 = 100 + i * 10
            y2 = y1 + 50
            
            # –°–≤–µ—á–∞
            self.canvas.create_rectangle(x, y1, x+30, y2, fill="green", outline="green", tags="chart")
            # –§–∏—Ç–∏–ª—å
            self.canvas.create_line(x+15, y1-20, x+15, y2+20, fill="green", tags="chart")
        
        # –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º FIX —ç–ª–µ–º–µ–Ω—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
        self.redraw_fix()
        
    def draw_fix(self):
        """–†–∏—Å—É–µ—Ç FIX –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫"""
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏
        self._stored_fix_rect = (200, 150, 400, 250)
        self.redraw_fix()
        
    def redraw_fix(self):
        """–ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç FIX —ç–ª–µ–º–µ–Ω—Ç—ã"""
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ FIX —ç–ª–µ–º–µ–Ω—Ç—ã
        for item in self._fix_items:
            self.canvas.delete(item)
        self._fix_items.clear()
        
        # –†–∏—Å—É–µ–º –Ω–æ–≤—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if self._stored_fix_rect:
            x1, y1, x2, y2 = self._stored_fix_rect
            
            # FIX –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫
            fix_rect = self.canvas.create_rectangle(
                x1, y1, x2, y2,
                outline="#A56BFF", width=3, dash=(5, 3), fill=""
            )
            self._fix_items.append(fix_rect)
            
            # –ü–æ–¥–ø–∏—Å—å
            fix_label = self.canvas.create_text(
                (x1 + x2) / 2, y1 - 15,
                text="üü£ FIX PLATEAU", fill="#A56BFF", font=("Arial", 12, "bold")
            )
            self._fix_items.append(fix_label)
            
            print("‚úÖ FIX elements redrawn")
        
    def clear_canvas(self):
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ"""
        self.canvas.delete("all")
        self._fix_items.clear()
        self._stored_fix_rect = None
        
    def redraw_chart(self):
        """–ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –≤–µ—Å—å –≥—Ä–∞—Ñ–∏–∫"""
        self.draw_basic_chart()
        
    def on_canvas_configure(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è canvas"""
        if self._stored_fix_rect:
            print("Canvas Configure - redrawing FIX")
            self.redraw_fix()
        
    def on_window_resize(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞"""
        if event.widget == self.root and self._stored_fix_rect:
            print("Window Resize - redrawing chart")
            self.root.after(100, self.draw_basic_chart)
            
    def run(self):
        print("üöÄ Test app started")
        print("1. Click 'Draw FIX' to create purple rectangle")
        print("2. Try moving/resizing window - rectangle should persist")
        print("3. Click 'Redraw Chart' to test chart redraw")
        self.root.mainloop()

if __name__ == "__main__":
    app = TestApp()
    app.run()