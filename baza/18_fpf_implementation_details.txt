# ТЕХНИЧЕСКИЕ ДЕТАЛИ РЕАЛИЗАЦИИ FPF ПАТТЕРНА
# Создано: 2025-08-30 после исправления алгоритма детекции

## ПРАВИЛЬНАЯ ПОСЛЕДОВАТЕЛЬНОСТЬ ПОИСКА ЭЛЕМЕНТОВ FPF

### 1. SMART FIX AREA SEARCH
**Алгоритм умного поиска FIX области:**
- Сначала находим абсолютный максимум (потенциальный HI-PATTERN)
- Затем находим абсолютный минимум до HI-PATTERN (потенциальный LOY-FIX)  
- Ищем FIX область МЕЖДУ LOY-FIX и HI-PATTERN с учетом:
  * Низкая волатильность (< 1.5%)
  * Близость к OCR свече (бонус +15 если distance <= 10)
  * Правильная последовательность по времени
  * LOY-FIX < FIX < HI-PATTERN

### 2. LOY-FIX ДЕТЕКЦИЯ
**База знаний:** "ЛОЙ-FIX = самый низкий лой МЕЖДУ областью FIX и Hi-pattern"

**Алгоритм:**
```python
search_start = fix_end_idx + 1  # сразу ПОСЛЕ FIX
search_end = hi_pattern_idx      # до HI-PATTERN

# Ищем самый низкий лой в этой области
for i in range(search_start, search_end):
    if candles[i].low < lowest_price:
        lowest_price = candles[i].low
        lowest_idx = i
```

**ВАЖНО:** Не требуем чтобы LOY-FIX был ниже FIX области - это неверно по базе знаний.

### 3. RAY ПОСТРОЕНИЕ
**База знаний:** "RAY = горизонтальная линия от самого низкого лоя между FIX и Hi-pattern"

**Условие построения:** RAY рисуется ТОЛЬКО когда "цена от Hi-pattern пошла вниз"
- Проверяем минимум 2 свечи после HI-PATTERN
- Если 2+ свечи закрылись ниже HI-PATTERN цены → рисуем RAY

**Визуализация:**
- RAY линия: горизонтальная от LOY-FIX до точки валидации/брейка
- RAY подпись: по центру луча, на 15px выше линии

### 4. RAY ВАЛИДАЦИЯ - КЛЮЧЕВОЙ МОМЕНТ ПАТТЕРНА!

**⚡ RAY - ЭТО НЕ ПРОСТО ОТРЕЗОК, ЭТО ВАЛИДАЦИЯ ВСЕГО ПАТТЕРНА!**

**Процесс валидации:**
1. RAY отходит от самого низкого лоя между FIX и HI-PATTERN
2. Цена движется вниз после HI-PATTERN

### 5. PREFIX ОБЛАСТЬ - ФИНАЛЬНАЯ РЕАЛИЗАЦИЯ

**КРИТИЧЕСКИЕ ДЕТАЛИ PREFIX:**

**Позиционирование:**
```python
# PREFIX начинается С МОМЕНТА валидации RAY
prefix_start_idx = ray_validation_idx  # НЕ +10, НЕ другой отступ!

# PREFIX на том же уровне что FIX
prefix_high_price = fix_high_price  # верх PREFIX = верх FIX
prefix_low_price = fix_low_price    # низ PREFIX = низ FIX
```

**Логика завершения PREFIX:**
```python
consecutive_breaks = 0
for i in range(prefix_start_idx + 1, min(data_len, prefix_start_idx + 100)):
    candle = candle_data[i]
    
    # Считаем consecutive breaks - свечи закрывшиеся ниже PREFIX
    if candle.close < fix_low_price:
        consecutive_breaks += 1
    elif candle.high > fix_low_price:  
        # Если цена вернулась в PREFIX - сбрасываем счетчик
        consecutive_breaks = 0
    
    # PREFIX заканчивается когда 10 свечей подряд НЕ возвращались в зону
    if consecutive_breaks >= 10:
        prefix_end_idx = i
        break
```

**Важные принципы:**
- PREFIX = активная торговая зона для шортов
- Активна пока есть периодические возвраты в область
- Длительность: 15-25 свечей на M15 (вместо 1-2 как было)
- Критерий: 10 свечей БЕЗ касания области = конец зоны

**СТАТУС РЕАЛИЗАЦИИ:** ✅ ПРОТЕСТИРОВАНО И РАБОТАЕТ
- Реализовано в snapp.py инструменте для тренировки основного бота
- Тест на реальных данных BNBUSDT M15: PREFIX корректно появляется на индексе 288 (момент валидации RAY)
- PREFIX корректно завершается на индексе 306 (18 свечей длительность)
- Устойчиво работает при изменении размеров окна (исправлены артефакты перерисовки)
- Готово к интеграции в основной торговый бот
3. **КАК ТОЛЬКО цена обновила RAY сверху-вниз → ПАТТЕРН ВАЛИДИРОВАН!**
4. После валидации определяется область PREFIX

**Технический код валидации:**
```python
break_threshold = loy_price - (2 * tick_size)  # 2 тика вниз от RAY
for i in range(hi_idx + 1, len(candlesticks)):
    if candlesticks[i].low <= break_threshold:
        return i  # индекс ВАЛИДАЦИИ ПАТТЕРНА
```

**Визуальные индикаторы валидации:**
- До валидации: RAY = желтая пунктирная линия  
- После валидации: RAY = желтая сплошная линия + маркер точки пробоя

## ВИЗУАЛЬНЫЕ ЭЛЕМЕНТЫ

### Цвета и размеры:
- **FIX**: синий прямоугольник, только границы, прозрачный
- **LOY-FIX**: красная точка (радиус 5px), подпись "LOY-FIX"
- **HI-PATTERN**: зеленая точка (радиус 8px), подпись "HI-PATTERN" 
- **RAY**: желтая линия (толщина 2px), подпись "RAY" по центру, сверху

### Подписи:
- LOY-FIX: под точкой на 20px
- HI-PATTERN: над точкой на 20px  
- RAY: по центру луча, над линией на 15px

## ИСПРАВЛЕННЫЕ ОШИБКИ

### ❌ Старая логика (неверная):
- LOY-FIX искался в расширенной области (включая ДО FIX)
- Требовалось чтобы LOY-FIX был обязательно ниже FIX области
- RAY строился сразу при обнаружении паттерна

### ✅ Новая логика (правильная):
- LOY-FIX ищется СТРОГО между FIX и HI-PATTERN  
- LOY-FIX = просто самый низкий лой в этой области
- RAY строится только когда цена пошла вниз от HI-PATTERN

## РЕЗУЛЬТАТ
**Confidence 0.90+** при правильной детекции всех элементов согласно базе знаний.

**Пример правильного паттерна:**
- FIX: 248-252 (744.64-748.40)
- LOY-FIX: 273 (733.05) - между FIX и HI-PATTERN ✅
- HI-PATTERN: 279 (765.56) - абсолютный максимум ✅  
- RAY: от 733.05 до точки валидации ✅