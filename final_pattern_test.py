#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞
"""

import sys
import pandas as pd
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from core.ai_search_pattern.fpf_detector_new import FpfPattern, CandleData

def final_pattern_test():
    """–°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    data_file = Path("data_dl/BNBUSDT_M15_2025-05.csv")
    df = pd.read_csv(data_file)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ CandleData
    candlesticks = []
    for _, row in df.iterrows():
        candle = CandleData(
            timestamp=row['ts_open_ms'],
            open=row['open'],
            high=row['high'], 
            low=row['low'],
            close=row['close'],
            volume=row['volume']
        )
        candlesticks.append(candle)
    
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó FPF –ü–ê–¢–¢–ï–†–ù–ê")
    print("=" * 50)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:
    loy_fix_idx = 435
    loy_fix_price = 635.66
    
    fix_start_idx = 465
    fix_end_idx = 470
    fix_low = 647.52
    fix_high = 650.00
    fix_center = (fix_low + fix_high) / 2
    
    hi_pattern_idx = 476
    hi_pattern_price = 652.18
    
    print(f"‚úÖ –ü–†–ê–í–ò–õ–¨–ù–´–ï –ö–û–û–†–î–ò–ù–ê–¢–´ –ü–ê–¢–¢–ï–†–ù–ê:")
    print(f"   LOY-FIX: —Å–≤–µ—á–∞ #{loy_fix_idx}, —Ü–µ–Ω–∞ {loy_fix_price:.2f}")
    print(f"   FIX: —Å–≤–µ—á–∏ {fix_start_idx}-{fix_end_idx}, —Ü–µ–Ω—ã {fix_low:.2f}-{fix_high:.2f}")
    print(f"   HI-PATTERN: —Å–≤–µ—á–∞ #{hi_pattern_idx}, —Ü–µ–Ω–∞ {hi_pattern_price:.2f}")
    
    # –†–∞—Å—á–µ—Ç PREFIX —Ü–µ–Ω
    fix_height = fix_high - fix_low
    prefix_start_price = loy_fix_price
    prefix_end_price = loy_fix_price - fix_height
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –≤—Ä—É—á–Ω—É—é
    pattern = FpfPattern(
        fix_start_idx=fix_start_idx,
        fix_end_idx=fix_end_idx,
        fix_high=fix_high,
        fix_low=fix_low,
        loy_fix_idx=loy_fix_idx,
        loy_fix_price=loy_fix_price,
        hi_pattern_idx=hi_pattern_idx,
        hi_pattern_price=hi_pattern_price,
        ray_price=loy_fix_price,
        ray_validated=False,
        prefix_start_price=prefix_start_price,
        prefix_end_price=prefix_end_price,
        confidence=0.95
    )
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —É—Å–ª–æ–≤–∏–π –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    print(f"\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô:")
    
    # 1. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    seq_ok = loy_fix_idx < fix_start_idx < hi_pattern_idx
    print(f"   1. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å LOY‚ÜíFIX‚ÜíHI: {'‚úÖ' if seq_ok else '‚ùå'}")
    print(f"      {loy_fix_idx} < {fix_start_idx} < {hi_pattern_idx}: {seq_ok}")
    
    # 2. LOY-FIX –Ω–∏–∂–µ FIX –æ–±–ª–∞—Å—Ç–∏
    loy_below = loy_fix_price < fix_low
    print(f"   2. LOY-FIX –Ω–∏–∂–µ FIX: {'‚úÖ' if loy_below else '‚ùå'}")
    print(f"      {loy_fix_price:.2f} < {fix_low:.2f}: {loy_below}")
    
    # 3. HI-PATTERN –≤—ã—à–µ FIX –æ–±–ª–∞—Å—Ç–∏
    hi_above = hi_pattern_price > fix_high
    print(f"   3. HI-PATTERN –≤—ã—à–µ FIX: {'‚úÖ' if hi_above else '‚ùå'}")
    print(f"      {hi_pattern_price:.2f} > {fix_high:.2f}: {hi_above}")
    
    # 4. FIX –∫–∞–∫ –ø–ª–∞—Ç–æ (–Ω–∏–∑–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å)
    fix_volatility = (fix_high - fix_low) / fix_center * 100
    volatility_ok = fix_volatility < 1.0  # –º–µ–Ω–µ–µ 1%
    print(f"   4. FIX –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {'‚úÖ' if volatility_ok else '‚ùå'}")
    print(f"      {fix_volatility:.2f}% < 1.0%: {volatility_ok}")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ RAY –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    ray_price = loy_fix_price
    ray_validated = False
    
    # –ò—â–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é RAY –ø–æ—Å–ª–µ HI-PATTERN
    for i in range(hi_pattern_idx + 1, min(len(candlesticks), hi_pattern_idx + 30)):
        if candlesticks[i].low < ray_price:
            ray_validated = True
            print(f"   5. RAY –≤–∞–ª–∏–¥–∞—Ü–∏—è: ‚úÖ –Ω–∞ —Å–≤–µ—á–µ #{i}, —Ü–µ–Ω–∞ {candlesticks[i].low:.2f}")
            break
    
    if not ray_validated:
        print(f"   5. RAY –≤–∞–ª–∏–¥–∞—Ü–∏—è: ‚è≥ –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ (RAY = {ray_price:.2f})")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    all_checks = [seq_ok, loy_below, hi_above, volatility_ok]
    passed_checks = sum(all_checks)
    
    print(f"\nüéØ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:")
    print(f"   ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: {passed_checks}/4")
    print(f"   üìä –ö–∞—á–µ—Å—Ç–≤–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞: {'–û–¢–õ–ò–ß–ù–û–ï' if passed_checks == 4 else '–•–û–†–û–®–ï–ï' if passed_checks >= 3 else '–°–†–ï–î–ù–ï–ï'}")
    print(f"   üé≤ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {95 if passed_checks == 4 else 85 if passed_checks >= 3 else 70}%")
    
    # –¢–æ—Ä–≥–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏
    print(f"\nüìà –¢–û–†–ì–û–í–´–ï –£–†–û–í–ù–ò:")
    print(f"   üî¥ RAY (—Å—Ç–æ–ø-—É—Ä–æ–≤–µ–Ω—å): {ray_price:.2f}")
    
    fix_height = fix_high - fix_low
    prefix_target = ray_price - fix_height
    print(f"   üü¢ PREFIX —Ü–µ–ª—å: {prefix_target:.2f}")
    print(f"   üìè FIX –≤—ã—Å–æ—Ç–∞: {fix_height:.2f}")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑
    print(f"\n‚è∞ –í–†–ï–ú–ï–ù–ù–û–ô –ê–ù–ê–õ–ò–ó:")
    
    def format_time(idx):
        if idx < len(candlesticks):
            from datetime import datetime
            timestamp = candlesticks[idx].timestamp
            dt = datetime.fromtimestamp(timestamp / 1000)
            return dt.strftime('%Y-%m-%d %H:%M')
        return "N/A"
    
    print(f"   LOY-FIX –≤—Ä–µ–º—è: {format_time(loy_fix_idx)}")
    print(f"   FIX –ø–µ—Ä–∏–æ–¥: {format_time(fix_start_idx)} - {format_time(fix_end_idx)}")
    print(f"   HI-PATTERN –≤—Ä–µ–º—è: {format_time(hi_pattern_idx)}")
    
    # –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã
    loy_to_fix = (fix_start_idx - loy_fix_idx) * 15  # –º–∏–Ω—É—Ç
    fix_duration = (fix_end_idx - fix_start_idx + 1) * 15  # –º–∏–Ω—É—Ç
    fix_to_hi = (hi_pattern_idx - fix_end_idx) * 15  # –º–∏–Ω—É—Ç
    
    print(f"\n‚è±Ô∏è –ò–ù–¢–ï–†–í–ê–õ–´:")
    print(f"   LOY-FIX ‚Üí FIX: {loy_to_fix} –º–∏–Ω—É—Ç ({loy_to_fix//60}—á {loy_to_fix%60}–º)")
    print(f"   FIX –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {fix_duration} –º–∏–Ω—É—Ç")
    print(f"   FIX ‚Üí HI-PATTERN: {fix_to_hi} –º–∏–Ω—É—Ç ({fix_to_hi//60}—á {fix_to_hi%60}–º)")
    
    if all_checks:
        print(f"\nüéâ –ü–ê–¢–¢–ï–†–ù –ì–û–¢–û–í –ö –¢–û–†–ì–û–í–õ–ï!")
        if not ray_validated:
            print(f"   ‚è≥ –û–∂–∏–¥–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏ RAY –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –ø–æ–∑–∏—Ü–∏—é")
    
    return pattern

if __name__ == "__main__":
    final_pattern_test()