#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ - —Å–æ–∑–¥–∞–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
–∏ –∑–∞–ø—É—Å–∫–∞–µ–º snapp –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
"""

import sys
import pandas as pd
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from core.ai_search_pattern.fpf_detector_new import FpfPattern, CandleData

class MockFPFDetector:
    """–ú–æ–∫ –¥–µ—Ç–µ–∫—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω"""
    
    def detect_pattern(self, candles, ocr_candle_idx=None):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω"""
        
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
        pattern = FpfPattern(
            fix_start_idx=465,
            fix_end_idx=470,
            fix_high=650.00,
            fix_low=647.52,
            loy_fix_idx=435,
            loy_fix_price=635.66,
            hi_pattern_idx=476,
            hi_pattern_price=652.18,
            ray_price=635.66,
            ray_validated=False,
            prefix_start_price=635.66,
            prefix_end_price=633.18,
            confidence=0.95,
            ocr_candle_idx=ocr_candle_idx
        )
        
        print(f"‚úÖ –ú–æ–∫ –¥–µ—Ç–µ–∫—Ç–æ—Ä –≤–µ—Ä–Ω—É–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω:")
        print(f"   LOY-FIX: #{pattern.loy_fix_idx}, —Ü–µ–Ω–∞ {pattern.loy_fix_price:.2f}")
        print(f"   FIX: #{pattern.fix_start_idx}-{pattern.fix_end_idx}, {pattern.fix_low:.2f}-{pattern.fix_high:.2f}")
        print(f"   HI-PATTERN: #{pattern.hi_pattern_idx}, —Ü–µ–Ω–∞ {pattern.hi_pattern_price:.2f}")
        print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {pattern.confidence:.0%}")
        
        return pattern

def test_corrected_pattern():
    """–¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞"""
    
    print("üéØ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ü–ê–¢–¢–ï–†–ù–ê")
    print("=" * 50)
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –¥–µ—Ç–µ–∫—Ç–æ—Ä –≤ snapp –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
    import tools.snapp as snapp_module
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å
    original_detector = snapp_module.FpfPatternDetector
    
    # –ü–æ–¥–º–µ–Ω—è–µ–º –Ω–∞ –º–æ–∫
    snapp_module.FpfPatternDetector = MockFPFDetector
    
    print("‚úÖ –î–µ—Ç–µ–∫—Ç–æ—Ä –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é")
    print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å snapp –∏ —É–≤–∏–¥–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω!")
    
    print(f"\nüìù –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 tools/snapp.py")
    print(f"   2. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç BNBUSDT –≤ –æ–∫–Ω–æ")
    print(f"   3. –ü–∞—Ç—Ç–µ—Ä–Ω –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏:")
    print(f"      - LOY-FIX –Ω–∞ —É—Ä–æ–≤–Ω–µ 635.66 (–∑–µ–ª–µ–Ω–∞—è —Ç–æ—á–∫–∞)")
    print(f"      - FIX –æ–±–ª–∞—Å—Ç—å 647.52-650.00 (—Å–∏–Ω–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫)")  
    print(f"      - HI-PATTERN –Ω–∞ —É—Ä–æ–≤–Ω–µ 652.18 (–∫—Ä–∞—Å–Ω–∞—è —Ç–æ—á–∫–∞)")
    print(f"      - RAY –ª–∏–Ω–∏—è –æ—Ç 635.66 –≤–ø—Ä–∞–≤–æ")

if __name__ == "__main__":
    test_corrected_pattern()