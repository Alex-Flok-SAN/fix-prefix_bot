#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üîÑ Session Context Restorer
–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ—Å—Å–∏–∏ Claude Code –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
"""

import os
import json
import subprocess
from datetime import datetime
from pathlib import Path

class SessionContextRestorer:
    def __init__(self):
        self.backup_file = Path("SESSION_CONTEXT_BACKUP.md")
        self.context_dir = Path("session_context")
        
    def check_system_status(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏"""
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã...")
        
        status = {}
        
        # Git —Å—Ç–∞—Ç—É—Å
        try:
            git_result = subprocess.run(
                ["git", "status", "--porcelain"],
                capture_output=True, text=True
            )
            status["git_changes"] = len(git_result.stdout.strip().split('\n')) if git_result.stdout.strip() else 0
        except Exception:
            status["git_changes"] = "unknown"
        
        # GitHub Sync Daemon
        pid_file = Path(".github_sync_daemon.pid")
        status["sync_daemon"] = "stopped"
        if pid_file.exists():
            try:
                pid = pid_file.read_text().strip()
                check_result = subprocess.run(
                    ["ps", "-p", pid], 
                    capture_output=True, text=True
                )
                status["sync_daemon"] = "running" if check_result.returncode == 0 else "stopped"
            except Exception:
                status["sync_daemon"] = "unknown"
        
        # Claude prompts
        prompts_dir = Path("claude_prompts")
        if prompts_dir.exists():
            status["claude_prompts"] = len(list(prompts_dir.glob("*.txt")))
        else:
            status["claude_prompts"] = 0
        
        return status
    
    def generate_continuation_prompt(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤ Claude Code"""
        
        current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        status = self.check_system_status()
        
        # –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if self.backup_file.exists():
            with open(self.backup_file, 'r', encoding='utf-8') as f:
                backup_preview = f.read()[:1000] + "..."
        else:
            backup_preview = "–§–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
        continuation_prompt = f"""# üîÑ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –°–ï–°–°–ò–ò FPF BOT - {current_time}

## üìã **–ö–û–ù–¢–ï–ö–°–¢ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø:**

–≠—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º **FPF Bot** - —Ç–æ—Ä–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ **FIX-PREFIX-FIX**.

### üéØ **–ó–∞–≥—Ä—É–∑–∏ –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ GitHub:**
```
https://raw.githubusercontent.com/Alex-Flok-SAN/fix-prefix_bot/main/SESSION_CONTEXT_BACKUP.md
https://raw.githubusercontent.com/Alex-Flok-SAN/fix-prefix_bot/main/ULTIMATE_KNOWLEDGE_BASE_GUIDE_FOR_AI_TRAINING.md
```

### üìä **–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:**
- Git –∏–∑–º–µ–Ω–µ–Ω–∏–π: {status.get('git_changes', 0)}
- Sync Daemon: {status.get('sync_daemon', 'unknown')}
- Claude –ø—Ä–æ–º–ø—Ç–æ–≤: {status.get('claude_prompts', 0)}

### üîß **–°–∏—Å—Ç–µ–º—ã –ø—Ä–æ–µ–∫—Ç–∞:**
‚úÖ **–ò–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è GitHub** - —Ç–æ–ª—å–∫–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è  
‚úÖ **–í–µ–±-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Claude** - –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–µ–∫—Ç—É —á–µ—Ä–µ–∑ GitHub  
‚úÖ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç** - –ø—Ä–æ–º–ø—Ç—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö  
‚úÖ **Session Backup** - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–π  

### ‚ö° **–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:**
```bash
# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
git status
./scripts/github_sync_control.sh status

# –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç—ã
python3 scripts/generate_claude_context.py

# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
./scripts/save_context.sh

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
./scripts/approved_sync.sh stable "Session restored"
```

### üéØ **FPF BOT - —á—Ç–æ —ç—Ç–æ:**
- **–¢–æ—Ä–≥–æ–≤—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω:** FIX ‚Üí LOY-FIX ‚Üí HI-PATTERN ‚Üí RAY ‚Üí PREFIX
- **AI –¥–µ—Ç–µ–∫—Ü–∏—è:** OCR + pattern recognition
- **–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:** https://github.com/Alex-Flok-SAN/fix-prefix_bot

## üöÄ **–ì–û–¢–û–í –ü–†–û–î–û–õ–ñ–ò–¢–¨ –†–ê–ë–û–¢–£!**

–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–∑ GitHub —Å—Å—ã–ª–æ–∫ –≤—ã—à–µ —Ç—ã –±—É–¥–µ—à—å –∑–Ω–∞—Ç—å:
- –ü–æ–ª–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
- –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏  
- –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –∏ —Å–∫—Ä–∏–ø—Ç—ã
- –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–µ–±-–≤–µ—Ä—Å–∏–µ–π Claude

**–ü—Ä–æ–¥–æ–ª–∂–∞–π —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ—Å—Å–∏–∏!**

---
*üîÑ –ê–≤—Ç–æ—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {current_time}*
*üìÇ –ü—Ä–æ–µ–∫—Ç: FPF Bot Trading System*
"""
        
        return continuation_prompt
    
    def create_vscode_task(self):
        """–î–æ–±–∞–≤–ª—è–µ—Ç VSCode —Ç–∞—Å–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        
        vscode_dir = Path(".vscode")
        vscode_dir.mkdir(exist_ok=True)
        
        tasks_file = vscode_dir / "tasks.json"
        
        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
        if tasks_file.exists():
            with open(tasks_file, 'r', encoding='utf-8') as f:
                tasks_data = json.load(f)
        else:
            tasks_data = {
                "version": "2.0.0",
                "tasks": []
            }
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        restore_task = {
            "label": "üîÑ Restore Session Context",
            "type": "shell",
            "command": "python3",
            "args": ["scripts/restore_session_context.py"],
            "group": "build",
            "presentation": {
                "echo": True,
                "reveal": "always",
                "focus": True
            },
            "problemMatcher": []
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –∑–∞–¥–∞—á–∞
        existing_task = next((t for t in tasks_data["tasks"] if t.get("label") == "üîÑ Restore Session Context"), None)
        if not existing_task:
            tasks_data["tasks"].append(restore_task)
            
            with open(tasks_file, 'w', encoding='utf-8') as f:
                json.dump(tasks_data, f, indent=4, ensure_ascii=False)
            
            print(f"‚úÖ VSCode –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: {tasks_file}")
        else:
            print("‚ÑπÔ∏è  VSCode –∑–∞–¥–∞—á–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    def run_restoration(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        
        print("üîÑ –ó–∞–ø—É—Å–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏...")
        
        status = self.check_system_status()
        
        print(f"""
üìä **–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:**
‚îú‚îÄ‚îÄ Git –∏–∑–º–µ–Ω–µ–Ω–∏–π: {status.get('git_changes', 0)}
‚îú‚îÄ‚îÄ Sync Daemon: {status.get('sync_daemon', 'stopped')}
‚îî‚îÄ‚îÄ Claude –ø—Ä–æ–º–ø—Ç–æ–≤: {status.get('claude_prompts', 0)}
""")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        continuation_prompt = self.generate_continuation_prompt()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        restore_file = Path("RESTORE_SESSION_PROMPT.md")
        restore_file.write_text(continuation_prompt, encoding='utf-8')
        
        print(f"‚úÖ –ü—Ä–æ–º–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {restore_file}")
        
        # –°–æ–∑–¥–∞–µ–º VSCode –∑–∞–¥–∞—á—É
        self.create_vscode_task()
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é
        print(f"""
üéØ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é:**

1Ô∏è‚É£ **–î–ª—è Claude Code:** –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑:
   üìÑ {self.backup_file} (–µ—Å–ª–∏ –µ—Å—Ç—å)
   üìÑ {restore_file} (—Å–≤–µ–∂–∏–π –ø—Ä–æ–º–ø—Ç)

2Ô∏è‚É£ **–î–ª—è –≤–µ–±-Claude:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ GitHub —Å—Å—ã–ª–∫–∏:
   üîó https://raw.githubusercontent.com/Alex-Flok-SAN/fix-prefix_bot/main/SESSION_CONTEXT_BACKUP.md

3Ô∏è‚É£ **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:**
   bash git status
   bash ./scripts/github_sync_control.sh status

4Ô∏è‚É£ **–ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–º–æ–Ω (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):**
   bash ./scripts/github_sync_control.sh start

üöÄ –ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É FPF Bot!
""")
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω, –µ—Å–ª–∏ –æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if status.get('sync_daemon') == 'stopped':
            print("ü§ñ –î–µ–º–æ–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ó–∞–ø—É—Å–∫–∞—é...")
            try:
                subprocess.run(["./scripts/github_sync_control.sh", "start"], check=True)
                print("‚úÖ GitHub Sync Daemon –∑–∞–ø—É—â–µ–Ω")
            except Exception as e:
                print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω: {e}")

if __name__ == "__main__":
    restorer = SessionContextRestorer()
    restorer.run_restoration()