#!/usr/bin/env python3
"""
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ FIX –æ–±–ª–∞—Å—Ç–∏ - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
"""

import sys
import pandas as pd
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

from core.ai_search_pattern.fpf_detector_new import FpfPatternDetector, CandleData

def alternative_fix_search():
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ FIX –æ–±–ª–∞—Å—Ç–∏"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    data_file = Path("data_dl/BNBUSDT_M15_2025-05.csv")
    df = pd.read_csv(data_file)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ CandleData
    candlesticks = []
    for _, row in df.iterrows():
        candle = CandleData(
            timestamp=row['ts_open_ms'],
            open=row['open'],
            high=row['high'], 
            low=row['low'],
            close=row['close'],
            volume=row['volume']
        )
        candlesticks.append(candle)
    
    print("üîç –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –ü–û–ò–°–ö FIX –û–ë–õ–ê–°–¢–ò")
    print("=" * 50)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ—á–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    best_loy_fix = (435, 635.66)  # –ª—É—á—à–∏–π LOY-FIX
    best_hi_pattern = (476, 652.18)  # HI-PATTERN
    
    print(f"üìç –ò–∑–≤–µ—Å—Ç–Ω—ã–µ —Ç–æ—á–∫–∏:")
    print(f"   LOY-FIX: —Å–≤–µ—á–∞ #{best_loy_fix[0]}, —Ü–µ–Ω–∞ {best_loy_fix[1]:.2f}")
    print(f"   HI-PATTERN: —Å–≤–µ—á–∞ #{best_hi_pattern[0]}, —Ü–µ–Ω–∞ {best_hi_pattern[1]:.2f}")
    
    # –ò—â–µ–º FIX –æ–±–ª–∞—Å—Ç–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
    print(f"\nüéØ –í–ê–†–ò–ê–ù–¢–´ FIX –û–ë–õ–ê–°–¢–ò:")
    
    # –î–µ—Ç–µ–∫—Ç–æ—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–ª–∞—Ç–æ
    detector = FpfPatternDetector()
    
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—â–µ–º FIX –º–µ–∂–¥—É LOY-FIX –∏ HI-PATTERN
    search_start = best_loy_fix[0] + 5  # –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Å–ª–µ LOY-FIX
    search_end = best_hi_pattern[0] - 5   # –Ω–µ–º–Ω–æ–≥–æ –¥–æ HI-PATTERN
    
    print(f"\nüìä –í–ê–†–ò–ê–ù–¢ 1: FIX –º–µ–∂–¥—É LOY-FIX –∏ HI-PATTERN ({search_start}-{search_end})")
    
    best_fixes = []
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –æ–∫–Ω–∞ –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏
    for window_size in range(3, 10):
        for start_idx in range(search_start, search_end - window_size):
            end_idx = start_idx + window_size
            
            if end_idx >= len(candlesticks):
                continue
                
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —ç—Ç–æ–≥–æ –æ–∫–Ω–∞
            window_candles = candlesticks[start_idx:end_idx+1]
            
            if len(window_candles) < 3:
                continue
                
            # –í—ã—Å–æ—Ç—ã –∏ –º–∏–Ω–∏–º—É–º—ã
            highs = [c.high for c in window_candles]
            lows = [c.low for c in window_candles]
            
            fix_high = max(highs)
            fix_low = min(lows)
            fix_center = (fix_high + fix_low) / 2
            fix_height = fix_high - fix_low
            
            # –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å
            volatility = fix_height / fix_center
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è FIX
            # 1. LOY-FIX –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∏–∂–µ —ç—Ç–æ–≥–æ FIX
            loy_below = best_loy_fix[1] < fix_low
            
            # 2. HI-PATTERN –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã—à–µ —ç—Ç–æ–≥–æ FIX  
            hi_above = best_hi_pattern[1] > fix_high
            
            # 3. –ù–∏–∑–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å (–ø–ª–∞—Ç–æ)
            low_volatility = volatility < 0.015  # 1.5%
            
            # 4. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: LOY-FIX < FIX < HI-PATTERN
            correct_sequence = (best_loy_fix[0] < start_idx < best_hi_pattern[0])
            
            if loy_below and hi_above and low_volatility and correct_sequence:
                score = 100 - (volatility * 1000) + (5 if end_idx - start_idx >= 5 else 0)
                best_fixes.append({
                    'start': start_idx,
                    'end': end_idx,
                    'low': fix_low,
                    'high': fix_high,
                    'center': fix_center,
                    'volatility': volatility * 100,
                    'score': score,
                    'size': end_idx - start_idx + 1
                })
    
    if best_fixes:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ score
        best_fixes.sort(key=lambda x: x['score'], reverse=True)
        
        print(f"\n‚úÖ –ù–ê–ô–î–ï–ù–û {len(best_fixes)} –≤–∞–ª–∏–¥–Ω—ã—Ö FIX –æ–±–ª–∞—Å—Ç–µ–π:")
        
        for i, fix in enumerate(best_fixes[:5], 1):
            print(f"\n   {i}. –°–í–ï–ß–ò {fix['start']}-{fix['end']} (—Ä–∞–∑–º–µ—Ä {fix['size']}):")
            print(f"      –¶–µ–Ω—ã: {fix['low']:.2f} - {fix['high']:.2f}")
            print(f"      –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {fix['volatility']:.2f}%")
            print(f"      Score: {fix['score']:.1f}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
            print(f"      –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: LOY({best_loy_fix[0]}) ‚Üí FIX({fix['start']}-{fix['end']}) ‚Üí HI({best_hi_pattern[0]})")
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
            loy_to_fix = fix['start'] - best_loy_fix[0]
            fix_to_hi = best_hi_pattern[0] - fix['end']
            
            print(f"      –†–∞—Å—Å—Ç–æ—è–Ω–∏—è: LOY‚ÜíFIX={loy_to_fix} —Å–≤–µ—á–µ–π, FIX‚ÜíHI={fix_to_hi} —Å–≤–µ—á–µ–π")
            
        # –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
        best_fix = best_fixes[0]
        
        print(f"\nüèÜ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–ê–Ø FIX –û–ë–õ–ê–°–¢–¨: {best_fix['start']}-{best_fix['end']}")
        print(f"   –¶–µ–Ω—ã: {best_fix['low']:.2f} - {best_fix['high']:.2f}")
        print(f"   –†–∞–∑–º–µ—Ä: {best_fix['size']} —Å–≤–µ—á–µ–π")
        print(f"   –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {best_fix['volatility']:.2f}%")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏
        print(f"\n‚úÖ –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô:")
        print(f"   1. LOY-FIX ({best_loy_fix[1]:.2f}) < FIX low ({best_fix['low']:.2f}): ‚úÖ")
        print(f"   2. FIX high ({best_fix['high']:.2f}) < HI-PATTERN ({best_hi_pattern[1]:.2f}): ‚úÖ") 
        print(f"   3. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å LOY‚ÜíFIX‚ÜíHI: ‚úÖ")
        print(f"   4. –ù–∏–∑–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å FIX: ‚úÖ")
        
        # –†–∞—Å—á–µ—Ç RAY –∏ PREFIX
        ray_price = best_loy_fix[1]
        fix_height = best_fix['high'] - best_fix['low']
        prefix_target = ray_price - fix_height
        
        print(f"\nüéØ –¢–û–†–ì–û–í–´–ï –£–†–û–í–ù–ò:")
        print(f"   RAY (–æ—Ç LOY-FIX): {ray_price:.2f}")
        print(f"   FIX –≤—ã—Å–æ—Ç–∞: {fix_height:.2f}")
        print(f"   PREFIX —Ü–µ–ª—å: {prefix_target:.2f}")
        
    else:
        print(f"\n‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û –≤–∞–ª–∏–¥–Ω—ã—Ö FIX –æ–±–ª–∞—Å—Ç–µ–π –≤ —ç—Ç–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ")
        print(f"   –í–æ–∑–º–æ–∂–Ω–æ, –ø–∞—Ç—Ç–µ—Ä–Ω –∏–º–µ–µ—Ç –¥—Ä—É–≥—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ —Å –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏
        print(f"\nüîÑ –ü–û–ò–°–ö –° –ú–Ø–ì–ö–ò–ú–ò –£–°–õ–û–í–ò–Ø–ú–ò...")
        
        relaxed_fixes = []
        for window_size in range(3, 8):
            for start_idx in range(search_start, search_end - window_size):
                end_idx = start_idx + window_size
                
                if end_idx >= len(candlesticks):
                    continue
                    
                window_candles = candlesticks[start_idx:end_idx+1]
                
                if len(window_candles) < 3:
                    continue
                    
                highs = [c.high for c in window_candles]
                lows = [c.low for c in window_candles]
                
                fix_high = max(highs)
                fix_low = min(lows)
                fix_center = (fix_high + fix_low) / 2
                fix_height = fix_high - fix_low
                volatility = fix_height / fix_center
                
                # –ë–æ–ª–µ–µ –º—è–≥–∫–∏–µ —É—Å–ª–æ–≤–∏—è
                loy_below = best_loy_fix[1] < fix_high  # –ª–æ–π –Ω–∏–∂–µ –í–ï–†–•–ê —Ñ–∏–∫—Å–∞
                hi_above = best_hi_pattern[1] > fix_low   # —Ö–∞–π –≤—ã—à–µ –ù–ò–ó–ê —Ñ–∏–∫—Å–∞
                moderate_volatility = volatility < 0.025  # 2.5%
                correct_sequence = (best_loy_fix[0] < start_idx < best_hi_pattern[0])
                
                if loy_below and hi_above and moderate_volatility and correct_sequence:
                    score = 50 - (volatility * 500)
                    relaxed_fixes.append({
                        'start': start_idx,
                        'end': end_idx,
                        'low': fix_low,
                        'high': fix_high,
                        'volatility': volatility * 100,
                        'score': score,
                        'size': end_idx - start_idx + 1
                    })
        
        if relaxed_fixes:
            relaxed_fixes.sort(key=lambda x: x['score'], reverse=True)
            print(f"\n‚ö†Ô∏è –ù–ê–ô–î–ï–ù–û {len(relaxed_fixes)} –æ–±–ª–∞—Å—Ç–µ–π —Å –º—è–≥–∫–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏:")
            
            for i, fix in enumerate(relaxed_fixes[:3], 1):
                print(f"   {i}. –°–í–ï–ß–ò {fix['start']}-{fix['end']}: {fix['low']:.2f}-{fix['high']:.2f}, –≤–æ–ª–∞—Ç {fix['volatility']:.2f}%")

if __name__ == "__main__":
    alternative_fix_search()